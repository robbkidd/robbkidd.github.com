<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Slightly Ahead of Behind the Curve]]></title>
  <link href="http://thekidds.org/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://thekidds.org/"/>
  <updated>2015-09-11T14:23:58-04:00</updated>
  <id>http://thekidds.org/</id>
  <author>
    <name><![CDATA[Robb Kidd]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[One Unity Launcher]]></title>
    <link href="http://thekidds.org/blog/2012/04/05/one-unity-launcher/"/>
    <updated>2012-04-05T14:43:00-04:00</updated>
    <id>http://thekidds.org/blog/2012/04/05/one-unity-launcher</id>
    <content type="html"><![CDATA[<p>T'was decided that <a href="http://www.omgubuntu.co.uk/2012/03/ubuntu-12-04-multi-monitor-to-be/">the default behavior for Unity&rsquo;s launcher will be to appear only on the primary monitor in Ubuntu 12.04</a>.
For some reason, when I upgraded to 12.04 (beta) today, my setting was
for the launcher to appear on ALL desktops. Not a fan of it on all desktops.</p>

<p>For those who want to change this setting, you&rsquo;ll need to install the Compiz
configuration manager.</p>

<p><code>
sudo aptitude install compizconfig-settings-manager
</code></p>

<p>Once installed, run it.</p>

<ol>
<li>Hover the Dash Home (Ubuntu icon on launcher)</li>
<li>Type in <code>compiz</code> and click on the <code>CompizConfig Settings Manager</code> icon that appears.</li>
<li>Select <code>Desktop</code> on the left.</li>
<li>Click on <code>Ubuntu Unity Plugin</code> on the right.</li>
<li>Select the <code>Experimental</code> tab and scroll all the way down.</li>
</ol>


<p>The setting for where launchers appear is <code>Launcher Monitors</code>. As of
 today (2012/04/05), you can select either <code>Primary Desktop</code> or <code>All Desktops</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Give Your Gems Some Context for SELinux]]></title>
    <link href="http://thekidds.org/blog/2011/07/11/give-your-gems-some-context-for-selinux/"/>
    <updated>2011-07-11T18:55:00-04:00</updated>
    <id>http://thekidds.org/blog/2011/07/11/give-your-gems-some-context-for-selinux</id>
    <content type="html"><![CDATA[<p>Are you deploying your Ruby app to Red Hat or CentOS? Is Passenger complaining about not having permission to load the gems you have bundled with your app&mdash;e.g. failed to map segment from shared object: Permission denied&mdash;despite all the basic filesystem permissions looking correct? Would you like to avoid the nearly ubiquitous advice to disable SELinux, thus turning off the security that comes out of the box with SELinux enabled?</p>

<p><code>
sudo chcon -R -h -t httpd_sys_content_t &lt;gems path&gt;
</code></p>

<ul>
<li><code>chcon</code> :: Changes the security context for those executables and libraries.</li>
<li><code>-R</code> :: (recursive) All the files here, please.</li>
<li><code>-h</code> :: Affect symbolic links instead of any referenced file.</li>
<li><code>-t httpd_sys_content_t</code> :: Set the TYPE in the security context.</li>
</ul>


<p>We deploy with capistrano, so I have added this as a task called after
<code>bundle:install</code> vendors my gems to <code>&lt;appdir&gt;/shared/bundle</code>.</p>

<p>```ruby
namespace :application do
  after &lsquo;bundle:install&rsquo;, &lsquo;application:update_selinux&rsquo;
  task :update_selinux, :roles => :web do</p>

<pre><code>puts 'Updating SELinux context for bundled gems'
run "#{try_sudo} chcon -R -h -t httpd_sys_content_t #{applicationdir}/shared/bundle/"
</code></pre>

<p>  end
end
```</p>
]]></content>
  </entry>
  
</feed>
